# PROMPT D'ANALYSE RIGOUREUSE AVANT CODAGE

## 🎯 OBJECTIF
Analyser rigoureusement l'application existante avant tout développement pour éviter les erreurs, inventions et incohérences.

## 📋 MÉTHODE OBLIGATOIRE

### ÉTAPE 1 : INVENTAIRE COMPLET
```
RECHERCHER ET LISTER :
- Tous les services existants avec leurs méthodes exactes
- Tous les composants similaires avec leurs patterns
- Toutes les interfaces/types avec leurs propriétés
- Tous les mixins/styles avec leurs paramètres
- Toutes les routes avec leurs structures
```

### ÉTAPE 2 : EXTRACTION DES PATTERNS
```
IDENTIFIER ET NOTER :
- Comment les autres composants font X 
- Quels paramètres sont utilisés 
- Quelle architecture est respectée 
- Quelles conventions de nommage sont appliquées
- Quelles structures de dossiers sont suivies
```


### ÉTAPE 3 : VALIDATION DES HYPOTHÈSES
```
VÉRIFIER CHAQUE AFFIRMATION :
- "Le service fait X" → MONTRER le code exact
- "Le paramètre est Y" → CITER la ligne précise  
- "L'architecture suit Z" → PROUVER avec exemples
- Jamais d'invention, seulement des FAITS
```

### ÉTAPE 4 : PLAN DE DÉVELOPPEMENT
```
DÉFINIR PRÉCISÉMENT :
- Quels patterns exactement réutiliser
- Quels services exactement appeler  
- Quels paramètres exactement utiliser
- Quelle structure exactement suivre
```

## ⚠️ INTERDICTIONS ABSOLUES
- ❌ Supposer un paramètre sans l'avoir vérifié
- ❌ Inventer une méthode qui n'existe pas
- ❌ Réinventer ce qui existe déjà
- ❌ Coder avant d'avoir terminé l'analyse
- ❌ Faire confiance à sa mémoire

## ✅ VALIDATION FINALE
Avant tout code, confirmer :
- "J'ai vérifié que X existe avec ces paramètres exacts"
- "J'ai identifié le pattern Y utilisé dans Z composants"
- "J'ai listé toutes les méthodes du service W"
- "Je n'invente rien, je réutilise seulement"

## 🎯 RÉSULTAT ATTENDU
Un développement qui s'intègre parfaitement dans l'existant, avec les bons paramètres et les bonnes conventions.