# üè≠ ANALOGIE DE L'ENTREPOT 
Parcours des donn√©es front/api/back/api/front 
Je commande un produit chez un fournisseur. 

## üè¢ **1. DEVANT L'ENTREP√îT**
**MOI (le client web)** : Devant l'entrep√¥t CHRONIQUES
* **Appuie sur la sonnette** : CLIC sur le menu Chroniques
* **Route Angular** : `/chroniques`
* **La porte s'ouvre** : J'entre dans l'entrep√¥t

---

## üìã **2. ACCUEIL - LA SECR√âTAIRE (Router Angular)**
**MOI** : Arriv√© √† l'accueil, on me donne un catalogue (une liste)
* **Je choisis un 'cassoulet' {title} de la marque Thermotek {username}**
* **Route Angular demand√©e** : `/chroniques/thermotek/cassoulet`

**SECR√âTAIRE (Router)** : Note ma commande
* **√âcrit** : "Client Snot ‚Üí cassoulet de Thermotek"
* **Transmet √† son coll√®gue (resolver)** : le chef des commandes

---

## üë®‚Äçüíº **3. CHEF DES COMMANDES (Resolver)**
**CHEF DES COMMANDES (Resolver)** 
* **Lit la commande** : "Thermotek/Cassoulet... un instant"
* **Consulte catalogue** : `GET /api/resolve/Thermotek/Cassoulet`
* **Trouve** : "Ah ! C'est l'article ID:141050" 
* **√âcrit bon de commande** : "Article ID:141050" 
* **Appelle un op√©rateur** 

---

## üöõ **4. CONDUCTEUR DE CHARIOT (HTTP Client)**
**LIVREUR** : Arrive avec son chariot
* **Re√ßoit bon** : "Aller chercher article ID:141050"
* **Route API** : `GET /api/stories/141050`
* **Badge acc√®s** : (JWT token) 
* **Direction** : Entrep√¥t s√©curis√©

---

## üõ°Ô∏è **5. PORTES S√âCURIS√âES (Middleware)**
**GARDE DE S√âCURIT√â** : "Stop ! Badge s'il vous pla√Æt !"

**LIVREUR** : Pr√©sente son badge
* **Badge** : `Authorization: Bearer`
* **Route Express** : `/api/stories/:id` (141050)

**GARDE** : scanne et valide : "Acc√®s autoris√© !"
* **La porte s'ouvre** ‚úÖ
* Le livreur entre dans l'entrep√¥t

---

## üì¶ **6. MAGASINIER (Controller)**
**LIVREUR** : Arrive au rayon
* **Pr√©sente bon** : "Je viens chercher l'article #141050"

**MAGASINIER (Controller)** : Prend le bon
* **Lit** : "Article ID:141050... OK !"
* **Va chercher** dans les all√©es

---

## üóÑÔ∏è **7. STOCKAGE (Database)**
**MAGASINIER** : Dans les all√©es
* **All√©e T** : Thermotek (db table) 
* **√âtag√®re 141050** : Trouve la bo√Æte
* **SQL Query** : `SELECT * FROM stories WHERE id = 141050`
* **V√©rifie** : "Thermotek/Cassoulet ‚úÖ"
* **Emballe** : Met dans paquet JSON

---

## üîÑ **8. RETOUR DU LIVREUR**
* **Traverse s√©curit√©** : Badge v√©rifi√© au retour
* **Retour √† l'accueil** : Avec l'article #141050
* **Donne √† la secr√©taire** : "Voici la commande de Snot"

---

## üéâ **9. LIVRAISON √Ä L'ACCUEIL**
**SECR√âTAIRE** : Re√ßoit le paquet
* **Me le donne** : "Voici votre Cassoulet Thermotek !"

**MOI (Snot)** : Prends mon paquet
* **Ouvre le paquet** : Parse JSON
* **Profite de ma commande**
* **Mission accomplie !**

---

## **R√âCAPITULATIF TECHNIQUE**

###**ARCHITECTURE COMPL√àTE : FRONT/API/BACK/API/FRONT**

**LE FLOW COMPLET** :
1. **FRONT** (Angular) ‚Üí Je s√©lectionne quelque chose, (router) appelle le (resolver), qui appelle (HTTP client)
2. **API** (HTTP Request) ‚Üí va chercher 
3. **BACK** (Express + Database) ‚Üí contr√¥le, trouve et emballe
4. **API** (HTTP Response) ‚Üí revient avec paquet JSON
5. **FRONT** (Angular) ‚Üí re√ßois mon paquet et l'ouvre 

### **ROUTES COMPL√àTES**
* **Frontend** : `/chroniques/thermotek/cassoulet`
* **API Resolver** : `GET /api/resolve/thermotek/cassoulet`
* **API Story** : `GET /api/stories/141050`
* **Backend Route** : `/api/stories/:id`
* **Database** : `SELECT * FROM stories WHERE id = 141050`

### **PING-PONG TECHNIQUE**
**Front ‚û°Ô∏è API ‚û°Ô∏è Back ‚û°Ô∏è API ‚û°Ô∏è Front**

**Pourquoi 2 API ?**
- **API REQUEST** = Aller 
- **API RESPONSE** = Retour 

###**PARCOURS COMPLET**
**URL** ‚Üí Router ‚Üí Resolver ‚Üí HTTP ‚Üí Middleware ‚Üí Controller ‚Üí Database ‚Üí JSON ‚Üí Component ‚Üí Affichage

**Le back ne peut JAMAIS "pousser" directement vers le front - il faut TOUJOURS passer par une r√©ponse API !**