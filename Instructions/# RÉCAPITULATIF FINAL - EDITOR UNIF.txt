# RÉCAPITULATIF FINAL - EDITOR UNIFIÉ

## ARCHITECTURE

Editor devient le hub central unique
Suppression du component my-stories
Toutes les routes pointent vers Editor

## SIGNALS

```typescript
private _isList = signal(true);
private _isEdit = signal(false);
private _listMode = signal<'draft' | 'published'>('draft');
private _editMode = signal<'edit-new' | 'edit-draft' | 'edit-published'>('edit-new');

headerTitle = computed(() => {
  if (this._isList()) {
    return this._listMode() === 'draft' ? 'Brouillons' : 'Histoires Publiées';
  } else {
    switch (this._editMode()) {
      case 'edit-new': return 'Nouvelle Histoire';
      case 'edit-draft': return 'Continuer Histoire';  
      case 'edit-published': return 'Modifier Histoire';
    }
  }
});
```

## INTERFACES

```typescript
interface Story {
  id: number;
  title: string;
  date: string;
  likes?: number;
}

interface StoryForm {
  title: string;
  content: string;
}
```

## NAVIGATION

Vue liste : boutons "Brouillons"/"Publiées" changent _listMode
Clic story : navigation/affichage seulement
Clic BOUTON : _isList = false + _isEdit = true + définit _editMode

## DONNÉES

```typescript
draftStories = computed((): Story[] => {
  return this.service.getDraftStories().map(story => ({
    id: story.id,
    title: story.title,
    date: this.formatDate(story.lastModified)
  }));
});

publishedStories = computed((): Story[] => {
  return this.service.getPublishedStories().map(story => ({
    id: story.id,
    title: story.title,
    date: this.formatDate(story.lastModified),
    likes: story.likes
  }));
});
```

## LOGIQUE MÉTIER

**edit-new** : Création from scratch
**edit-draft** : Édition directe brouillon  
**edit-published** : Copy published → nouveau draft → edit → replace original

## SERVICE

Garder privateStories.service
Méthodes : getDraftStories() / getPublishedStories()
Centraliser formatDate()
Supprimer duplications d'interfaces

## BDD

```sql
story {
  id: number
  title: string
  content: string
  status: 'DRAFT' | 'PUBLISHED'
}
```

## BACKEND

Conserver privateStoriesController + publicStoriesController
Pas de modification architecture backend