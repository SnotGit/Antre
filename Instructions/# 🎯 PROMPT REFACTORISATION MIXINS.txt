# 🎯 PROMPT REFACTORISATION MIXINS 

## ⚠️ EXÉCUTION STRICTE - AUCUNE INTERPRÉTATION
- **Suivre la méthode EXACTEMENT** dans l'ordre spécifié
- **Ne pas demander de clarifications** sur les choix
- **Implémenter tel que spécifié** sans modification
- **Livraison fichier par fichier** pour validation avant suite
- **Validation = pixel-perfect uniquement** (rendu identique)
- **Aucune invention** de mixins non spécifiés

## 🎯 MISSION
Refactoriser l'architecture SCSS existante selon philosophie "boîte à outils épurée" : garder mixins assemblage complexe, éliminer micro-mixins inutiles, valeurs en dur dans composants.

## 🏗️ ARCHITECTURE CIBLE

### 📁 Structure Ultra-Simple (2 dossiers)
```
styles/
├── utilities/     → Outils assemblage complexe (≥3 propriétés)
├── interface/     → Mixins complets par composant avec suffixe "-full"
└── index.scss     → Point d'entrée
```

### 🎯 Principe Fondamental : BOÎTE À OUTILS ÉPURÉE

**Niveau 1 : Outils assemblage complexe (≥3 propriétés)**
```scss
@mixin column-center { display + flex-direction + align + justify }
@mixin button-blue { font + colors + padding + hover + disabled... }
@mixin form-auth { labels + inputs + validation + switch tabs... }
```

**Niveau 2 : Assemblages composés**
```scss
@mixin story-card-full {
  @include column-center;   // Outil complexe réutilisé
  
  // Valeurs directes (plus de micro-mixins)
  background-color: #1a1d20;
  border: 2px solid #5d889e;
  border-radius: 12px;
  gap: 8px;
  cursor: pointer;
}
```

**Niveau 3 : Component final**
```scss
.story-card { @include story-card-full; }
```

## ✅ MIXINS À CRÉER/CONSERVER

### utilities/ (Outils assemblage complexe)

**Layouts (≥3 propriétés) :**
- `@mixin column-center` → display + flex-direction + align + justify
- `@mixin layout-chroniques` → container + responsive + grid chroniques
- `@mixin layout-marsball` → container + responsive + grid marsball  
- `@mixin layout-terraformars` → container + responsive + grid terraformars
- `@mixin layout-archives` → container + responsive + grid archives

**Backgrounds (éviter confusion couleurs) :**
- `@mixin background-1` → #121416 (fond principal app)
- `@mixin background-2` → #1a1d20 (fond cards/panels)
- `@mixin background-3` → #2a2d30 (fond sections)

**Boutons (assemblage complexe) :**
- `@mixin button-blue` → font + colors + padding + hover + disabled (bleu #5d889e)
- `@mixin button-red` → font + colors + padding + hover + disabled (orange #b55a44)

**Forms (assemblage complexe) :**
- `@mixin form-auth` → switch tabs + inputs + validation + messages
- `@mixin form-story` → création/édition histoires  
- `@mixin form-archive` → ajout archives
- `@mixin form-item` → ajout items

**Responsive (déplacements/ajustements) :**
- `@mixin responsive-main` → ajustements globaux containers
- `@mixin responsive-section` → ajustements contenu sections

**States (assemblage complexe) :**
- `@mixin loading-state` → spinner + centrage + padding + couleurs
- `@mixin error-state` → message + couleurs + centrage + padding
- `@mixin empty-state` → message + centrage + bouton action

**Effects (existant) :**
- `@mixin title-typing` → CONSERVER tel quel (déjà prêt)

### interface/ (Mixins complets par composant)

**Composants chroniques :**
- `@mixin story-card-full` → Card complète avec avatar + textes + hover
- `@mixin chroniques-full` → Page complète avec header + description + grid
- `@mixin storyboard-full` → Dashboard avec tabs + grille + scroll
- `@mixin story-detail-full` → Page détail avec navigation + like

## ❌ ÉLIMINER (micro-mixins inutiles)
- `gap-8`, `radius-12`, `pointer`, `transition-3` → 1 propriété = valeur directe
- `border-2-blue`, `background-2` → remplacer par valeurs directes
- Variables sur-utilisées `$blue`, `$spacing-20` → valeurs directes

## 🔧 MÉTHODE DE MIGRATION

### Phase 1 : Audit Reconstitution
1. **Analyser story-card-base existant** → lister tous mixins inclus
2. **Retrouver valeurs exactes** en dur pour chaque propriété  
3. **Créer story-card-full** avec valeurs directes + outils complexes
4. **Tester pixel-perfect** avant/après

### Phase 2 : Création Boîte À Outils
1. **Créer utilities/** → Outils assemblage complexe listés
2. **Créer interface/story-card-full** → Premier mixin complet
3. **Migrer story-card.component.scss** → 1 ligne include
4. **Validation visuelle** → Rendu identique

### Phase 3 : Livraison Séquentielle  
1. **1 fichier par message** pour révision
2. **Attendre validation** avant fichier suivant
3. **Continuer** uniquement après OK explicite

## 📋 EXEMPLE TRANSFORMATION RÉELLE

### AVANT (actuel)
```scss
// story-card.component.scss - 15+ lignes + imports multiples
@use "core/variables/variables" as *;
@use 'mixins/interface/interface' as *;

.story-card {
  @include story-card-base;
  
  .avatar-small {
    @include avatar($avatar-small);
  }
  
  .user-data {
    .username {
      @include username($username-default);
    }
    .user-description {
      @include user-description($description-default);
    }
  }
  
  .story-data {
    .story-title {
      @include story-title($story-card-title);
    }
    .publish-date {
      @include publish-date;
      font-size: 15px;
    }
  }
}
```

### APRÈS (épuré)
```scss
// story-card.component.scss - 1 ligne + import simple
.story-card { 
  @include story-card-full; 
}
```

```scss
// interface/_story-card.scss
@mixin story-card-full {
  @include column-center;   // Outil complexe réutilisé
  
  // Valeurs directes (plus de micro-mixins)
  background-color: #1a1d20;
  border: 2px solid #5d889e;
  border-radius: 12px;
  gap: 8px;
  padding: 24px;
  transition: all 0.3s ease;
  cursor: pointer;
  width: 320px;
  height: 240px;

  &:hover {
    border: 2px solid #b55a44;
  }

  .avatar-small {
    width: 90px;
    height: 90px;
    border: 2px solid #5d889e;
    border-radius: 50%;
  }

  .username {
    font-size: 18px;
    color: #5d889e;
    font-weight: 700;
    text-align: center;
  }

  .user-description {
    font-size: 12px;
    color: #d0d0d0;
    font-style: italic;
    text-align: center;
  }

  .story-title {
    font-size: 16px;
    color: #ffffff;
    font-weight: 600;
    text-align: center;
  }

  .publish-date {
    font-size: 15px;
    color: #5d889e;
    opacity: 0.8;
    text-align: center;
  }
}
```

## 📊 MÉTRIQUES SUCCÈS
- **90% réduction** fichiers SCSS (30+ → 2 dossiers)
- **100% élimination** micro-mixins 1 propriété  
- **100% fidélité** visuelle (pixel-perfect)
- **Zéro régression** fonctionnelle
- **Classes HTML inchangées** (.story-card, .navbar...)

## 🎯 LIVRABLE ATTENDU

### Premier fichier à livrer
**utilities/_layout.scss** avec :
- `@mixin column-center` (reconstitué fidèlement)
- Validation pixel-perfect avant suite

### Structure finale
```
src/app/styles/
├── utilities/
│   ├── _layout.scss      → Layouts + responsive
│   ├── _buttons.scss     → Boutons bleu/rouge
│   ├── _forms.scss       → Forms complexes
│   ├── _backgrounds.scss → 3 backgrounds
│   └── _states.scss      → Loading/error/empty
├── interface/
│   └── _story-card.scss  → @mixin story-card-full
└── index.scss
```

**COMMENCER PAR : utilities/_layout.scss avec @mixin column-center**