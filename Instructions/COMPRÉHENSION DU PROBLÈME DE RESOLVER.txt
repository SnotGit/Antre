COMPRÉHENSION DU PROBLÈME DE CONCEPTION
Le système actuel utilise les resolvers comme des recherches en base de données, ce qui viole l'architecture :

Les resolvers font des appels API backend pour chercher des titres en DB
Cela crée des doubles recherches inutiles
Cela mélange la responsabilité d'affichage URL avec la logique métier

VRAIE FONCTION D'UN RESOLVER
Un resolver doit être purement frontend : transformer une URL lisible en données nécessaires pour le composant, sans appel backend supplémentaire.
SOLUTION DE CONCEPTION

Éliminer les appels API des resolvers - Les resolvers ne doivent plus faire d'appels HTTP vers des endpoints de recherche
Passer les données via la navigation - Quand on navigue vers une édition, transmettre directement l'ID avec l'état de navigation
URL lisible + données directes - Maintenir l'URL avec titre pour le SEO, mais avoir l'ID disponible immédiatement sans recherche
Simplifier l'architecture - Les composants d'édition chargent directement via les services de load avec l'ID, plus de résolution
Supprimer les endpoints resolver inutiles - Plus besoin de /resolve/title/ qui fait des recherches par titre

Cette approche respecte le principe "Backend = ID uniquement" et "Frontend = URLs lisibles" sans créer de confusion entre résolution d'URL et recherche de données.