{
  "project": "L'Antre - Likes System Refactoring",
  "architecture": "statsController = stories stats | likeController = all likes domain",
  
  "phase_1_backend": {
    
    "task_1_modify_stats_controller": {
      "file": "backend/src/controllers/user/statsController.ts",
      "action": "MODIFY",
      "endpoint": "GET /user/stats",
      "remove": "totalLikes calculation and field",
      "keep": "drafts and published only",
      "interface_UserStats": {
        "drafts": "number",
        "published": "number"
      }
    },

    "task_2_create_received_likes_count": {
      "file": "backend/src/controllers/user/likeController.ts",
      "action": "CREATE",
      "function": "getReceivedLikesCount",
      "endpoint": "GET /user/likes/received",
      "query": "prisma.like.count({ where: { story: { userId: req.user.userId, status: 'PUBLISHED' } } })",
      "response": {
        "receivedLikes": "number"
      }
    },

    "task_3_create_posted_likes_count": {
      "file": "backend/src/controllers/user/likeController.ts",
      "action": "CREATE",
      "function": "getPostedLikesCount",
      "endpoint": "GET /user/likes/posted",
      "query": "prisma.like.count({ where: { userId: req.user.userId } })",
      "response": {
        "postedLikes": "number"
      }
    },

    "task_4_create_received_likes_list": {
      "file": "backend/src/controllers/user/likeController.ts",
      "action": "CREATE",
      "function": "getReceivedLikesList",
      "endpoint": "GET /user/likes/received-likes",
      "query": "Get user's published stories with likes info (storyId, title, publishDate, likesCount, lastLikedAt)",
      "response": {
        "receivedLikes": [
          {
            "storyId": "number",
            "title": "string",
            "publishDate": "string",
            "likesCount": "number",
            "lastLikedAt": "string"
          }
        ]
      }
    },

    "task_5_add_routes": {
      "file": "backend/src/routes/user/user.routes.ts",
      "action": "ADD",
      "position": "After existing likes routes",
      "routes": [
        "router.get('/likes/received', getReceivedLikesCount)",
        "router.get('/likes/posted', getPostedLikesCount)",
        "router.get('/likes/received-likes', getReceivedLikesList)"
      ]
    },

    "task_6_update_imports": {
      "file": "backend/src/routes/user/user.routes.ts",
      "action": "UPDATE",
      "import": "Add getReceivedLikesCount, getPostedLikesCount, getReceivedLikesList to import from likeController"
    },

    "note_future_renaming": {
      "file": "backend/src/controllers/user/likeController.ts",
      "action": "NOTE",
      "task": "Rename getPostedLikes → getLikedStories (later)"
    }
  },

  "phase_2_frontend": {

    "task_1_update_stats_service": {
      "file": "src/features/user/services/stats.service.ts",
      "action": "MODIFY",
      "interface_UserStats": {
        "drafts": "number",
        "published": "number",
        "totalStories": "number"
      },
      "remove": "totalLikes field"
    },

    "task_2_create_likes_stats_service": {
      "file": "src/features/user/services/likes-stats.service.ts",
      "action": "CREATE",
      "api_url": "environment.apiUrl/user/likes",
      "methods": [
        {
          "name": "getReceivedLikes",
          "endpoint": "GET /user/likes/received",
          "returns": "Promise<{ receivedLikes: number }>"
        },
        {
          "name": "getPostedLikes",
          "endpoint": "GET /user/likes/posted",
          "returns": "Promise<{ postedLikes: number }>"
        }
      ]
    },

    "task_3_modify_user_stats_component": {
      "file_ts": "src/features/user/components/user-stats/user-stats.ts",
      "action": "MODIFY",
      "changes": [
        "Remove totalLikes from userStats computed",
        "Add method: showMyLikes() → router.navigate(['/mon-compte/mes-likes'])"
      ],
      "file_html": "src/features/user/components/user-stats/user-stats.html",
      "changes": [
        "Remove <div class='stat-number'>{{ userStats().totalLikes }}</div>",
        "Remove class 'no-hover'",
        "Add (click)='showMyLikes()'",
        "Keep only <div class='stat-label'>LIKES</div>"
      ]
    },

    "task_4_create_my_likes_component": {
      "folder": "src/features/user/components/my-likes",
      "files": ["my-likes.ts", "my-likes.html", "my-likes.scss"],
      "my_likes_ts": {
        "selector": "app-my-likes",
        "imports": ["Router", "AuthService", "LikesStatsService", "TypingEffectService"],
        "title": "Mes Likes",
        "resource": "Load received and posted likes stats",
        "methods": [
          "goToReceivedLikes() → navigate(['/mon-compte/mes-likes/recus'])",
          "goToPostedLikes() → navigate(['/mon-compte/mes-likes/postes'])"
        ]
      },
      "my_likes_html": {
        "structure": "2 cards like my-stories",
        "card_1": {
          "click": "goToReceivedLikes()",
          "number": "{{ stats().receivedLikes }}",
          "label": "Likes Reçus"
        },
        "card_2": {
          "click": "goToPostedLikes()",
          "number": "{{ stats().postedLikes }}",
          "label": "Likes Postés"
        }
      },
      "my_likes_scss": {
        "base": "Copy structure from my-stories.scss"
      }
    },

    "task_5_update_liked_stories_component": {
      "file_ts": "src/features/user/components/liked-stories/liked-stories.ts",
      "action": "MODIFY",
      "add_input": "mode = input.required<'received' | 'posted'>()",
      "resource": {
        "loader": "if mode='received' → likeService.getReceivedLikes() | if mode='posted' → likeService.getLikedStories()"
      },
      "title": {
        "received": "Likes Reçus",
        "posted": "Histoires Likées"
      },
      "file_html": "src/features/user/components/liked-stories/liked-stories.html",
      "action": "ADAPT",
      "display_received": "Show: story title, likes count, last liked date",
      "display_posted": "Show: author avatar, username, story title, publish date, liked date"
    },

    "task_6_update_like_service": {
      "file": "src/features/user/services/like.service.ts",
      "action": "ADD",
      "interface_ReceivedLike": {
        "storyId": "number",
        "title": "string",
        "publishDate": "string",
        "likesCount": "number",
        "lastLikedAt": "string"
      },
      "interface_ReceivedLikesResponse": {
        "receivedLikes": "ReceivedLike[]"
      },
      "method": {
        "name": "getReceivedLikes",
        "endpoint": "GET /user/likes/received-likes",
        "returns": "Promise<ReceivedLikesResponse>"
      }
    },

    "task_7_create_liked_stories_scss": {
      "file": "src/features/user/components/liked-stories/liked-stories.scss",
      "action": "CREATE",
      "base": "Copy structure from draft-list.scss"
    },

    "task_8_add_routes": {
      "file": "src/features/user/routes/user-routes.ts",
      "action": "ADD",
      "routes": [
        {
          "path": "mes-likes",
          "component": "my-likes",
          "guard": "authGuard"
        },
        {
          "path": "mes-likes/recus",
          "component": "liked-stories",
          "guard": "authGuard",
          "note": "Pass mode='received' via route data or state"
        },
        {
          "path": "mes-likes/postes",
          "component": "liked-stories",
          "guard": "authGuard",
          "note": "Pass mode='posted' via route data or state"
        }
      ]
    }
  },

  "execution_order": [
    "phase_1_backend: task_1 → task_2 → task_3 → task_4 → task_5 → task_6",
    "phase_2_frontend: task_1 → task_2 → task_3 → task_4 → task_5 → task_6 → task_7 → task_8"
  ],

  "testing_checklist": [
    "Backend: GET /user/stats returns only drafts and published",
    "Backend: GET /user/likes/received returns receivedLikes count",
    "Backend: GET /user/likes/posted returns postedLikes count",
    "Backend: GET /user/likes/received-likes returns list",
    "Frontend: LIKES card in user-stats is clickable",
    "Frontend: Navigate to /mon-compte/mes-likes works",
    "Frontend: my-likes displays 2 cards with correct numbers",
    "Frontend: Click Likes Reçus navigates to /mon-compte/mes-likes/recus",
    "Frontend: Click Likes Postés navigates to /mon-compte/mes-likes/postes",
    "Frontend: liked-stories displays correct content based on mode"
  ]
}