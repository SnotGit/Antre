generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  user
}

enum StoryStatus {
  DRAFT
  PUBLISHED
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique @db.VarChar(50)
  email       String   @unique @db.VarChar(100)
  passwordHash String  @map("password_hash") @db.VarChar(255)
  description String?  @db.Text
  avatar      String?  @db.VarChar(255)
  role        UserRole @default(user)
  createdAt   DateTime @default(now()) @map("created_at")
  
  stories     Story[]
  likes       Like[]
  
  @@map("users")
}

model Story {
  id          Int         @id @default(autoincrement())
  title       String      @db.VarChar(200)
  content     String      @db.Text
  status      StoryStatus @default(DRAFT)
  userId      Int         @map("user_id")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  publishedAt DateTime?   @map("published_at")
  
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes       Like[]
  
  @@index([userId, title])
  @@map("stories")
}

model Like {
  id      Int @id @default(autoincrement())
  userId  Int @map("user_id")
  storyId Int @map("story_id")
  createdAt DateTime @default(now()) @map("created_at")
  
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  story   Story @relation(fields: [storyId], references: [id], onDelete: Cascade)
  
  @@unique([userId, storyId])
  @@map("likes")
}